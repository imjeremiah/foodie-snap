-- Demo Content Embeddings Migration
-- Creates sample embeddings for journal entries to enable RAG similarity search

-- Create a function to generate sample embeddings (placeholder vectors)
-- In production, these would be generated by OpenAI's embedding API
CREATE OR REPLACE FUNCTION generate_sample_embedding(content_text TEXT)
RETURNS vector(1536) AS $$
DECLARE
  embedding_array FLOAT[];
  i INTEGER;
  hash_value INTEGER;
BEGIN
  -- Create a simple hash-based embedding for demo purposes
  -- Real embeddings would come from OpenAI's embedding API
  hash_value := abs(hashtext(content_text)) % 1000000;
  
  -- Initialize array
  embedding_array := ARRAY[]::FLOAT[];
  
  -- Generate 1536 values based on content hash for consistency
  FOR i IN 1..1536 LOOP
    embedding_array := array_append(embedding_array, 
      (sin(hash_value * i * 0.01) + cos(hash_value * i * 0.005)) * 0.1
    );
  END LOOP;
  
  RETURN embedding_array::vector(1536);
END;
$$ LANGUAGE plpgsql;

-- Insert embeddings for Alex Chen's content
INSERT INTO public.content_embeddings (id, user_id, journal_entry_id, content_type, content_text, embedding, metadata, created_at, updated_at)
SELECT 
  gen_random_uuid(),
  je.user_id,
  je.id,
  'caption',
  je.caption,
  generate_sample_embedding(je.caption),
  jsonb_build_object(
    'meal_type', CASE 
      WHEN je.caption ILIKE '%breakfast%' OR je.caption ILIKE '%morning%' THEN 'breakfast'
      WHEN je.caption ILIKE '%lunch%' THEN 'lunch'
      WHEN je.caption ILIKE '%dinner%' THEN 'dinner'
      WHEN je.caption ILIKE '%snack%' OR je.caption ILIKE '%bar%' THEN 'snack'
      ELSE 'meal'
    END,
    'nutrition_focus', CASE
      WHEN je.caption ILIKE '%protein%' THEN 'protein'
      WHEN je.caption ILIKE '%carb%' OR je.caption ILIKE '%carbohydrate%' THEN 'carbs'
      WHEN je.caption ILIKE '%fat%' OR je.caption ILIKE '%healthy fat%' THEN 'fats'
      ELSE 'balanced'
    END,
    'preparation_method', CASE
      WHEN je.caption ILIKE '%prep%' THEN 'meal_prep'
      WHEN je.caption ILIKE '%grilled%' THEN 'grilled'
      WHEN je.caption ILIKE '%roasted%' THEN 'roasted'
      WHEN je.caption ILIKE '%smoothie%' THEN 'blended'
      ELSE 'cooked'
    END,
    'dietary_pattern', CASE
      WHEN je.caption ILIKE '%plant%' OR je.caption ILIKE '%vegan%' THEN 'plant_based'
      WHEN je.caption ILIKE '%keto%' OR je.caption ILIKE '%low carb%' THEN 'keto'
      WHEN je.caption ILIKE '%paleo%' THEN 'paleo'
      ELSE 'standard'
    END
  ),
  je.created_at,
  je.updated_at
FROM public.journal_entries je
JOIN public.profiles p ON je.user_id = p.id
WHERE p.email = 'alex.chen@demo.foodiesnap.com' 
AND je.caption IS NOT NULL;

-- Insert image metadata embeddings for Alex's content
INSERT INTO public.content_embeddings (id, user_id, journal_entry_id, content_type, content_text, embedding, metadata, created_at, updated_at)
SELECT 
  gen_random_uuid(),
  je.user_id,
  je.id,
  'image_metadata',
  je.extracted_text,
  generate_sample_embedding(je.extracted_text),
  jsonb_build_object(
    'ingredients', CASE
      WHEN je.extracted_text ILIKE '%chicken%' THEN ARRAY['chicken']
      WHEN je.extracted_text ILIKE '%steak%' THEN ARRAY['beef', 'steak']
      WHEN je.extracted_text ILIKE '%protein%' THEN ARRAY['protein_powder']
      ELSE ARRAY[]::text[]
    END,
    'cooking_method', CASE
      WHEN je.extracted_text ILIKE '%grilled%' THEN 'grilled'
      WHEN je.extracted_text ILIKE '%roasted%' THEN 'roasted'
      ELSE 'prepared'
    END
  ),
  je.created_at,
  je.updated_at
FROM public.journal_entries je
JOIN public.profiles p ON je.user_id = p.id
WHERE p.email = 'alex.chen@demo.foodiesnap.com' 
AND je.extracted_text IS NOT NULL;

-- Insert embeddings for Sarah Johnson's plant-based content
INSERT INTO public.content_embeddings (id, user_id, journal_entry_id, content_type, content_text, embedding, metadata, created_at, updated_at)
SELECT 
  gen_random_uuid(),
  je.user_id,
  je.id,
  'caption',
  je.caption,
  generate_sample_embedding(je.caption),
  jsonb_build_object(
    'meal_type', CASE 
      WHEN je.caption ILIKE '%breakfast%' THEN 'breakfast'
      WHEN je.caption ILIKE '%bowl%' THEN 'lunch'
      WHEN je.caption ILIKE '%prep%' THEN 'meal_prep'
      ELSE 'meal'
    END,
    'nutrition_focus', 'plant_protein',
    'dietary_pattern', 'plant_based',
    'preparation_method', CASE
      WHEN je.caption ILIKE '%overnight%' THEN 'overnight_prep'
      WHEN je.caption ILIKE '%roasted%' THEN 'roasted'
      WHEN je.caption ILIKE '%smoothie%' THEN 'blended'
      ELSE 'fresh_prep'
    END
  ),
  je.created_at,
  je.updated_at
FROM public.journal_entries je
JOIN public.profiles p ON je.user_id = p.id
WHERE p.email = 'sarah.johnson@demo.foodiesnap.com' 
AND je.caption IS NOT NULL;

-- Insert embeddings for Mike Rodriguez's HIIT nutrition content
INSERT INTO public.content_embeddings (id, user_id, journal_entry_id, content_type, content_text, embedding, metadata, created_at, updated_at)
SELECT 
  gen_random_uuid(),
  je.user_id,
  je.id,
  'caption',
  je.caption,
  generate_sample_embedding(je.caption),
  jsonb_build_object(
    'meal_type', CASE 
      WHEN je.caption ILIKE '%pre-workout%' OR je.caption ILIKE '%before%' THEN 'pre_workout'
      WHEN je.caption ILIKE '%post-workout%' OR je.caption ILIKE '%after%' THEN 'post_workout'
      WHEN je.caption ILIKE '%dinner%' OR je.caption ILIKE '%eating window%' THEN 'dinner'
      ELSE 'meal'
    END,
    'nutrition_focus', CASE
      WHEN je.caption ILIKE '%protein%' THEN 'protein'
      WHEN je.caption ILIKE '%low carb%' OR je.caption ILIKE '%keto%' THEN 'low_carb'
      ELSE 'performance'
    END,
    'dietary_pattern', 'intermittent_fasting',
    'timing_strategy', CASE
      WHEN je.caption ILIKE '%timing%' THEN 'nutrient_timing'
      WHEN je.caption ILIKE '%fasting%' THEN 'if_protocol'
      ELSE 'standard'
    END
  ),
  je.created_at,
  je.updated_at
FROM public.journal_entries je
JOIN public.profiles p ON je.user_id = p.id
WHERE p.email = 'mike.rodriguez@demo.foodiesnap.com' 
AND je.caption IS NOT NULL;

-- Insert embeddings for Emma Wilson's macro tracking content
INSERT INTO public.content_embeddings (id, user_id, journal_entry_id, content_type, content_text, embedding, metadata, created_at, updated_at)
SELECT 
  gen_random_uuid(),
  je.user_id,
  je.id,
  'caption',
  je.caption,
  generate_sample_embedding(je.caption),
  jsonb_build_object(
    'meal_type', CASE 
      WHEN je.caption ILIKE '%lunch%' THEN 'lunch'
      WHEN je.caption ILIKE '%pizza%' THEN 'dinner'
      WHEN je.caption ILIKE '%treat%' THEN 'snack'
      ELSE 'meal'
    END,
    'nutrition_focus', 'macro_tracking',
    'dietary_pattern', 'flexible_dieting',
    'macro_data', CASE
      WHEN je.caption ILIKE '%28g protein%' THEN jsonb_build_object('protein', 28, 'carbs', 35, 'fat', 12)
      WHEN je.caption ILIKE '%32g protein%' THEN jsonb_build_object('protein', 32, 'carbs', 25, 'fat', 8)
      ELSE jsonb_build_object()
    END
  ),
  je.created_at,
  je.updated_at
FROM public.journal_entries je
JOIN public.profiles p ON je.user_id = p.id
WHERE p.email = 'emma.wilson@demo.foodiesnap.com' 
AND je.caption IS NOT NULL;

-- Insert embeddings for David Kim's powerlifting content
INSERT INTO public.content_embeddings (id, user_id, journal_entry_id, content_type, content_text, embedding, metadata, created_at, updated_at)
SELECT 
  gen_random_uuid(),
  je.user_id,
  je.id,
  'caption',
  je.caption,
  generate_sample_embedding(je.caption),
  jsonb_build_object(
    'meal_type', CASE 
      WHEN je.caption ILIKE '%prep%' THEN 'meal_prep'
      ELSE 'meal'
    END,
    'nutrition_focus', 'mass_gaining',
    'dietary_pattern', 'bulking',
    'calorie_density', 'high',
    'training_context', 'powerlifting'
  ),
  je.created_at,
  je.updated_at
FROM public.journal_entries je
JOIN public.profiles p ON je.user_id = p.id
WHERE p.email = 'david.kim@demo.foodiesnap.com' 
AND je.caption IS NOT NULL;

-- Insert embeddings for Lisa Rodriguez's nutritionist content
INSERT INTO public.content_embeddings (id, user_id, journal_entry_id, content_type, content_text, embedding, metadata, created_at, updated_at)
SELECT 
  gen_random_uuid(),
  je.user_id,
  je.id,
  'caption',
  je.caption,
  generate_sample_embedding(je.caption),
  jsonb_build_object(
    'meal_type', CASE 
      WHEN je.caption ILIKE '%bowl%' THEN 'lunch'
      WHEN je.caption ILIKE '%smoothie%' THEN 'snack'
      ELSE 'meal'
    END,
    'nutrition_focus', 'evidence_based',
    'dietary_pattern', 'mediterranean',
    'educational_context', true,
    'professional_perspective', true
  ),
  je.created_at,
  je.updated_at
FROM public.journal_entries je
JOIN public.profiles p ON je.user_id = p.id
WHERE p.email = 'lisa.rodriguez@demo.foodiesnap.com' 
AND je.caption IS NOT NULL;

-- Insert embeddings for James Taylor's chef content
INSERT INTO public.content_embeddings (id, user_id, journal_entry_id, content_type, content_text, embedding, metadata, created_at, updated_at)
SELECT 
  gen_random_uuid(),
  je.user_id,
  je.id,
  'caption',
  je.caption,
  generate_sample_embedding(je.caption),
  jsonb_build_object(
    'meal_type', CASE 
      WHEN je.caption ILIKE '%steak%' THEN 'dinner'
      WHEN je.caption ILIKE '%pizza%' THEN 'dinner'
      ELSE 'meal'
    END,
    'nutrition_focus', 'functional_nutrition',
    'dietary_pattern', 'paleo',
    'culinary_expertise', true,
    'training_context', 'crossfit'
  ),
  je.created_at,
  je.updated_at
FROM public.journal_entries je
JOIN public.profiles p ON je.user_id = p.id
WHERE p.email = 'james.taylor@demo.foodiesnap.com' 
AND je.caption IS NOT NULL;

-- Insert embeddings for Maria Garcia's mindful eating content
INSERT INTO public.content_embeddings (id, user_id, journal_entry_id, content_type, content_text, embedding, metadata, created_at, updated_at)
SELECT 
  gen_random_uuid(),
  je.user_id,
  je.id,
  'caption',
  je.caption,
  generate_sample_embedding(je.caption),
  jsonb_build_object(
    'meal_type', CASE 
      WHEN je.caption ILIKE '%morning%' THEN 'breakfast'
      WHEN je.caption ILIKE '%prep%' THEN 'meal_prep'
      ELSE 'meal'
    END,
    'nutrition_focus', 'holistic_wellness',
    'dietary_pattern', 'mindful_eating',
    'spiritual_context', true,
    'wellness_philosophy', 'holistic'
  ),
  je.created_at,
  je.updated_at
FROM public.journal_entries je
JOIN public.profiles p ON je.user_id = p.id
WHERE p.email = 'maria.garcia@demo.foodiesnap.com' 
AND je.caption IS NOT NULL;

-- Clean up the helper function
DROP FUNCTION generate_sample_embedding(TEXT); 